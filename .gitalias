[alias]
        a = add
        ai = add -i
        ap = add -p

        alias = !git config -l | grep ^alias.
        aliasg = !"f() { git alias | grep -oP --color=never \"alias\\.$@=\\K(.*)\"; }; f"

        amend = commit --amend

        b = branch
        bh = !"f() { git for-each-ref --format='%(refname:short) %1B[0;33m(%(committerdate:relative))%1B[m' --sort -committerdate refs/heads/ | head; }; f"
        bm = branch --merged
        bnm = branch --no-merged
        bd = branch -d
        bdel = branch -D
        bg = !"f() { git branch | grep "$@"; }; f"
        bga = !"f() { git branch --all | grep "$@"; }; f"
        bvv = branch -vv
        bavv = branch -a -vv

        c = commit
        cm = commit -m

        cl = clone
        clgh = !"f() { git clone "git@github.com:$1.git $2"; }; f"

        co = checkout
        cob = checkout -b

        cp = cherry-pick
        cpn = !"f() { git cherry-pick -n "$@" && git reset HEAD --; }; f"

        current-release = !git describe --tags --match "v[0-9]*" --abbrev=0

        current-branch = rev-parse --abbrev-ref HEAD

        d = diff --color
        ds = diff --color --ignore-all-space --stat
        dss = diff --color --ignore-all-space --shortstat

        ed = branch --no-merged dev

        f = fetch

        fc = !echo "4b825dc642cb6eb9a060e54bf8d69288fbee4904"

        g = !git gui
        gci = !git gui citool

        k = !gitk --argscmd='git for-each-ref --format=\"%(refname)\" refs/heads refs/tags'
        ka = !gitk --all
        ksc = !"f() { git k --select-commit="$@"; }; f"
        kasc = !"f() { git ka --select-commit="$@"; }; f"

        m = merge --no-ff -e
        mff = merge

        mt = mergetool -y

        l = log --all --graph --abbrev=5 --pretty=tformat:'%C(yellow)%h%Creset -%C(green bold)%d%Creset %s %C(white dim)(%cr) %C(blue bold)<%an>%Creset' --abbrev-commit
        lg = !"f() { git lnp | grep --color -i \"$@\"; }; f"
        lnp = !git --no-pager l
        lh = !"f() { if [ -z \"$1\" ]; then linecount=\"20\"; else linecount=$1; fi; git lnp | head -n \"$linecount\"; }; f"
        lu = log -u

        p = push
        pf = push --force
        pt = push --tags

        pl = pull

        revert-chmod = !"git diff -p -R | grep -E \"^(diff|(old|new) mode)\" | git apply"

        rb = rebase
        rba = rebase --abort
        rbc = rebase --continue
        rbs = rebase --skip

        rh = reset --hard

        s = status
        ss = status -s

        st  = stash
        stl = stash list
        sta = stash apply
        std = stash drop
        sts = stash show -p
        stp = stash pop

        sub = submodule
        subi = submodule init
        subu = submodule update

        t = tag
        td = tag -d

        una = reset HEAD --
        unc = reset --soft HEAD^

        who = shortlog -sne
